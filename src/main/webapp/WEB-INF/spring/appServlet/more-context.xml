<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- <context:property-placeholder
		location="file:///${aurin.dir}/envision-combined.properties,classpath*:envision-combined.properties" /> -->
	
		<context:property-placeholder
		location="file:///etc/aurin/envision-combined.properties,classpath*:envision-combined.properties" />
	<!-- WHAT IF ANALYSIS data source PROPERTIES -->

	<context:component-scan base-package="au.aurin.org" />
	
	<bean id="authDataStoreConfig"
		class="au.aurin.org.io.PostgisDataStoreConfig">
		<property name="host" value="${env.geo.db.host}" />
		<property name="databaseName" value="${env.geo.db.name}" />
		<property name="port" value="${env.geo.db.port}" />
		<property name="user" value="${env.geo.db.user}" />
		<property name="password" value="${env.geo.db.password}" />
		<property name="databaseType" value="${env.geo.db.type}" />
		<property name="validateConnection" value="${env.geo.db.validateConnection}" />
		<property name="schema" value="${env.geo.db.schema}" />
	</bean>

	<bean id="adminUser" class="au.aurin.org.svc.AdminUser">
		<property name="adminUsername" value="${env.auth.adminUsername}" />
		<property name="adminPassword" value="${env.auth.adminPassword}" />
	</bean>

	<!-- <bean id="dataSourceFactory" class="au.edu.unimelb.eresearch.data.DataSourceFactory" /> -->
	<bean id="dataSourceFactory" class="au.aurin.org.io.DataSourceFactory" />
	
	
	<bean id="userData" class="au.aurin.org.svc.userData">
	</bean>
	<bean id="dummyuserData" class="au.aurin.org.svc.dummyuserData">
	</bean>
		<bean id="dummyuserData2" class="au.aurin.org.svc.dummyuserData2">
	</bean>
	
<!-- 	<bean id="userValidator" class="au.aurin.org.svc.userValidator">
	</bean> -->
	

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${env.datasource.driverclassname}" />
		<property name="url" value="${env.datasource.url}" />
		<property name="username" value="${env.datasource.username}" />
		<property name="password" value="${env.datasource.password}" />
		<property name="initialSize" value="15" />
		<property name="maxActive" value="10" />
	</bean>		



	 <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	<property name="messageConverters">
	  <list>
	    <bean id="featureHttpMessageConverter"
	      class="au.aurin.org.io.FeatureHttpMessageConverter">
	      <!-- class="au.edu.unimelb.eresearch.spring.http.converter.geojson.FeatureHttpMessageConverter"> -->
	      <property name="featureJSON" ref="featureJSON" />
	    </bean>
	    <bean id="stringHttpMessageConverter"
	      class="org.springframework.http.converter.StringHttpMessageConverter" />
	    <bean id="MappingJacksonHttpMessageConverter"
	      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	    <bean id="formHttpMessageConverter"
	      class="org.springframework.http.converter.FormHttpMessageConverter" />
	  </list>
	</property>
  </bean>

<!--   <bean id="dataStoreClient" class="au.org.aurin.data.store.client.DataStoreClientImpl">
    <property name="url" value="${aurin.data-store-service.uri}" />
    <property name="restTemplate" ref="restTemplate" />
  </bean> -->

  <bean id="featureJSON" class="org.geotools.geojson.feature.FeatureJSON">
  	<constructor-arg>
	  <bean id="geomJSON" class="org.geotools.geojson.geom.GeometryJSON">
	  	<constructor-arg value="15" />
	  </bean>
  	</constructor-arg>
  </bean>
	
	
	
	
	<!-- Activates @Scheduled and @Async annotations for scheduling -->
	<!-- <task:annotation-driven executor="executorWithPoolSizeRange" scheduler="taskScheduler"/> -->

	<!-- Activates @Async annotations for scheduling -->
	<task:annotation-driven executor="asyncTaskExecutor" />

	<!-- The 'executor' element: When a task is submitted, the executor will 
		first try to use a free thread if the number of active threads is currently 
		less than the core size. If the core size has been reached, then the task 
		will be added to the queue as long as its capacity has not yet been reached. 
		Only then, if the queue's capacity has been reached, will the executor create 
		a new thread beyond the core size. If the max size has also been reached, 
		then the executor will reject the task See: 25.4.2 The 'executor' element -->

	<!-- Defines a ThreadPoolTaskExecutor instance with configurable pool size, 
		queue-capacity, keep-alive, and rejection-policy values. The id becomes the 
		default thread name prefix -->

	<task:executor id="asyncTaskExecutor" pool-size="5-25"
		queue-capacity="100" rejection-policy="CALLER_RUNS" />

	<!-- Defines a ThreadPoolTaskScheduler instance with configurable pool size. 
		The id becomes the default thread name prefix. -->
	<!-- <task:scheduler id="taskScheduler" pool-size="1"/> -->


	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.unimelb.edu.au" />
		<property name="port" value="587" />
		<property name="username" value="ashamakhy" />
		<property name="password" value="Khadijeh_2015" />
	 
		<property name="javaMailProperties">
		   <props>
	       	      <prop key="mail.smtp.auth">true</prop>
	       	      <prop key="mail.smtp.starttls.enable">true</prop>
	       	   </props>
		</property>
	</bean>
	 
	<bean id="classMail" class="au.aurin.org.io.classMail">
		<property name="mailSender" ref="mailSender" />
		<property name="host" value="${env.mail.host}" />
		<property name="port" value="${env.mail.port}" />
		<property name="starttls" value="${env.mail.starttls}" />
		<property name="auth" value="${env.mail.auth}" />
		<property name="username" value="${env.mail.username}" />
		<property name="password" value="${env.mail.password}" />		
    <property name="from" value="${env.mail.from}" />
		<property name="url" value="${env.mail.url}" />
	</bean>
 



</beans>
